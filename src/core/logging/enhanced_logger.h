#ifndef ENHANCED_LOGGER_H#define ENHANCED_LOGGER_H#include <stdint.h>#include <time.h>// Tipos básicostypedef uint32_t ThreadID;typedef struct StackTrace StackTrace;typedef struct LogStats LogStats;typedef struct LogAnalysisConfig LogAnalysisConfig;// Enumeração para níveis de logtypedef enum {    LOG_LEVEL_DEBUG,    LOG_LEVEL_INFO,    LOG_LEVEL_WARNING,    LOG_LEVEL_ERROR,    LOG_LEVEL_FATAL} LogLevel;// Configuração do loggertypedef struct {    const char* log_file;    LogLevel min_level;    size_t max_entries;    bool enable_stack_trace;} LogConfig;// Entrada de logtypedef struct {    LogLevel level;    const char* category;    const char* message;    time_t timestamp;    ThreadID thread_id;    StackTrace* stack_trace;} LogEntry;// Logger principaltypedef struct {    LogEntry** entries;    size_t entry_count;    LogConfig config;    void (*log)(LogLevel level, const char* category, const char* fmt, ...);    void (*flush_to_disk)(void);    void (*rotate_logs)(void);    void (*analyze_logs)(LogAnalysisConfig* config);    LogStats* (*get_statistics)(void);} EnhancedLogger;// Funções públicasEnhancedLogger* enhanced_logger_create(const LogConfig* config);void enhanced_logger_destroy(EnhancedLogger* logger);#endif // ENHANCED_LOGGER_H