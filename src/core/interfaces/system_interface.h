/** * @file system_interface.h * @brief Interface do sistema principal do emulador */#ifndef EMU_SYSTEM_INTERFACE_H#define EMU_SYSTEM_INTERFACE_H#include <stdint.h>#include <stdbool.h>#include "../../utils/common_types.h"#ifdef __cplusplusextern "C"{#endif    // Forward declarations    typedef struct emu_core_instance emu_core_instance_t;    typedef emu_core_instance_t *emu_core_t;    // Estrutura principal do core    struct emu_core_instance    {        bool initialized;     /* Sistema inicializado */        bool is_paused;       /* Sistema em pausa */        uint64_t frame_count; /* Contador de frames */        uint64_t cycle_count; /* Contador de ciclos */        void *memory;         /* Sistema de memória */        void *cpu;            /* CPU */        void *video;          /* Sistema de vídeo */        void *audio;          /* Sistema de áudio */        void *input;          /* Sistema de entrada */        void *platform_data;  /* Dados específicos da plataforma */    };    // Funções de interface    emu_core_t emu_core_create(void);    void emu_core_destroy(emu_core_t core);    int32_t emu_core_init(emu_core_t core);    void emu_core_shutdown(emu_core_t core);    int32_t emu_core_reset(emu_core_t core);    int32_t emu_core_load_rom(emu_core_t core, const uint8_t *data, size_t size);    int32_t emu_core_run_frame(emu_core_t core);    int32_t emu_core_run_cycles(emu_core_t core, int32_t cycles);    void emu_core_pause(emu_core_t core);    void emu_core_resume(emu_core_t core);#ifdef __cplusplus}#endif#endif /* EMU_SYSTEM_INTERFACE_H */