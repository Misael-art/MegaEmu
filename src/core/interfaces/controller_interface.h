#ifndef EMU_CONTROLLER_INTERFACE_H#define EMU_CONTROLLER_INTERFACE_H#include <stdint.h>#include <stdbool.h>#include "../../utils/common_types.h"#ifdef __cplusplusextern "C"{#endif    /* Definições dos botões do controle */    typedef enum    {        CONTROLLER_BUTTON_A = 0,        CONTROLLER_BUTTON_B,        CONTROLLER_BUTTON_SELECT,        CONTROLLER_BUTTON_START,        CONTROLLER_BUTTON_UP,        CONTROLLER_BUTTON_DOWN,        CONTROLLER_BUTTON_LEFT,        CONTROLLER_BUTTON_RIGHT,        CONTROLLER_BUTTON_COUNT    } controller_button_t;    /* Estado do controle */    typedef struct    {        uint16_t buttons; /* Estado dos botões (cada bit representa um botão) */        uint8_t analog_x; /* Posição X do analógico (0-255) */        uint8_t analog_y; /* Posição Y do analógico (0-255) */    } MegaEmu_Core_ControllerState;    /* Funções de interface do controle */    typedef struct    {        bool (*init)(void *user_data);        void (*shutdown)(void *user_data);        void (*update)(void *user_data);        bool (*is_button_pressed)(void *user_data, controller_button_t button);        void (*set_button_state)(void *user_data, controller_button_t button, bool pressed);        uint8_t (*get_analog_x)(void *user_data);        uint8_t (*get_analog_y)(void *user_data);    } emu_controller_interface_t;#ifdef __cplusplus}#endif#endif // EMU_CONTROLLER_INTERFACE_H