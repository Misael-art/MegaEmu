/** * @file version.hpp * @brief Define as constantes de versão do projeto * @author Mega_Emu Team * @version @PROJECT_VERSION@ * @date @BUILD_DATE@ */#pragma once#include <string>namespace MegaEmu{    /**     * @brief Namespace que contém informações sobre a versão do projeto     */    namespace Version    {        /**         * @brief Versão completa do projeto         */        constexpr const char *VERSION = "@PROJECT_VERSION@";        /**         * @brief Versão maior do projeto         */        constexpr int VERSION_MAJOR = @PROJECT_VERSION_MAJOR @;        /**         * @brief Versão menor do projeto         */        constexpr int VERSION_MINOR = @PROJECT_VERSION_MINOR @;        /**         * @brief Versão de patch do projeto         */        constexpr int VERSION_PATCH = @PROJECT_VERSION_PATCH @;        /**         * @brief Data de compilação do projeto         */        constexpr const char *BUILD_DATE = "@BUILD_DATE@";        /**         * @brief Sistema operacional alvo         */        constexpr const char *TARGET_OS = "@CMAKE_SYSTEM_NAME@";        /**         * @brief Arquitetura alvo         */        constexpr const char *TARGET_ARCH = "@CMAKE_SYSTEM_PROCESSOR@";        /**         * @brief Tipo de compilação         */        constexpr const char *BUILD_TYPE = "@CMAKE_BUILD_TYPE@";        /**         * @brief Compilador utilizado         */        constexpr const char *COMPILER = "@CMAKE_CXX_COMPILER_ID@ @CMAKE_CXX_COMPILER_VERSION@";        /**         * @brief Obtém a string de versão completa         * @return String contendo a versão completa         */        inline std::string getVersionString()        {            return std::string(VERSION) + " (" + BUILD_TYPE + ")";        }        /**         * @brief Obtém a string de plataforma         * @return String contendo informações da plataforma         */        inline std::string getPlatformString()        {            return std::string(TARGET_OS) + " " + TARGET_ARCH;        }        /**         * @brief Obtém a string de compilação         * @return String contendo informações de compilação         */        inline std::string getBuildString()        {            return std::string(COMPILER) + " on " + BUILD_DATE;        }    } // namespace Version} // namespace MegaEmu