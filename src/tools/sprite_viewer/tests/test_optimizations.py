import unittestimport numpy as npfrom ..core.optimizations import SpriteOptimizerfrom ..core.cache import SpriteCacheclass TestOptimizations(unittest.TestCase):    def setUp(self):        self.optimizer = SpriteOptimizer()        self.cache = SpriteCache()            def test_sprite_optimization(self):        test_data = [[1, 2], [3, 4]]        optimized = self.optimizer.optimize_sprite_load(test_data)        self.assertIsInstance(optimized, np.ndarray)            def test_cache_performance(self):        key = "test_sprite"        data = np.array([[1, 2], [3, 4]])                self.cache.put(key, data)        cached_data = self.cache.get(key)                self.assertTrue(np.array_equal(data, cached_data))