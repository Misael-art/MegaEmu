class CompositeSprite:    def __init__(self):        self.sprites = []        self.width = 0        self.height = 0            def add_sprite(self, sprite, x, y, palette_index=0, flip_h=False, flip_v=False):        """Adiciona sprite à composição"""        self.sprites.append({            'data': sprite,            'x': x,            'y': y,            'palette': palette_index,            'flip_h': flip_h,            'flip_v': flip_v        })                # Atualiza dimensões        self.width = max(self.width, x + sprite.shape[1])        self.height = max(self.height, y + sprite.shape[0])            def render(self):        """Renderiza sprite composto completo"""        result = np.zeros((self.height, self.width), dtype=np.uint8)                for sprite in self.sprites:            data = sprite['data']            if sprite['flip_h']:                data = np.fliplr(data)            if sprite['flip_v']:                data = np.flipud(data)                            x, y = sprite['x'], sprite['y']            h, w = data.shape                        # Aplica o sprite na posição correta            result[y:y+h, x:x+w] = data                    return result