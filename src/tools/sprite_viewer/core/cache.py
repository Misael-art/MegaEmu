from collections import OrderedDictimport numpy as npfrom .logging_config import SpriteViewerLoggerclass SpriteCache:    def __init__(self, max_size=1000):        self.max_size = max_size        self.cache = OrderedDict()        self.logger = SpriteViewerLogger()            def get(self, key):        """Recupera sprite do cache"""        if key in self.cache:            self.cache.move_to_end(key)            self.logger.log_sprite_operation("CACHE", f"Cache hit: {key}")            return self.cache[key]        self.logger.log_sprite_operation("CACHE", f"Cache miss: {key}")        return None            def put(self, key, sprite_data):        """Adiciona sprite ao cache"""        if len(self.cache) >= self.max_size:            self.cache.popitem(last=False)                self.cache[key] = sprite_data        self.cache.move_to_end(key)        self.logger.log_sprite_operation(            "CACHE",             f"Added to cache: {key}"        )