class SpriteMetadataViewer:    def __init__(self, parent):        self.frame = ttk.LabelFrame(parent, text="Sprite Metadata")                # Informações básicas        self.size_label = ttk.Label(self.frame, text="Size: ")        self.size_label.pack(anchor="w")                self.palette_label = ttk.Label(self.frame, text="Palette: ")        self.palette_label.pack(anchor="w")                self.addr_label = ttk.Label(self.frame, text="VRAM Address: ")        self.addr_label.pack(anchor="w")                # Informações específicas da plataforma        self.platform_frame = ttk.LabelFrame(self.frame, text="Platform Specific")        self.platform_frame.pack(fill="x", padx=5, pady=5)            def update_metadata(self, sprite_info):        """Atualiza metadados do sprite"""        self.size_label.config(text=f"Size: {sprite_info['size']}")        self.palette_label.config(text=f"Palette: {sprite_info['palette']}")        self.addr_label.config(text=f"VRAM Address: {sprite_info['vram_addr']:04X}h")                # Limpa informações específicas antigas        for widget in self.platform_frame.winfo_children():            widget.destroy()                    # Adiciona novas informações específicas        for key, value in sprite_info['platform_specific'].items():            ttk.Label(self.platform_frame, text=f"{key}: {value}").pack(anchor="w")