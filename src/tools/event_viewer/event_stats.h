/** * @file event_stats.h * @brief Estatísticas para eventos do sistema */#ifndef EMU_EVENT_STATS_H#define EMU_EVENT_STATS_H#include <stdint.h>#include "event_types.h"/** * @brief Estrutura para armazenar estatísticas de eventos */typedef struct{    uint64_t total_events;                  // Total de eventos processados    uint64_t events_by_type[EMU_EVENT_MAX]; // Eventos por tipo    double events_per_second;               // Taxa de eventos por segundo    uint64_t peak_events;                   // Pico de eventos em um período    uint64_t latency_sum;                   // Soma das latências    struct    {        uint64_t min_latency; // Latência mínima        uint64_t max_latency; // Latência máxima        double avg_latency;   // Latência média    } latency_stats;} EventStats;/** * @brief Atualiza as estatísticas com base em um novo evento * * @param stats Estatísticas a serem atualizadas * @param event Evento que está sendo processado */void event_stats_update(EventStats *stats, const EmuNodeEvent *event);/** * @brief Reseta as estatísticas para valores iniciais * * @param stats Estatísticas a serem resetadas */void event_stats_reset(EventStats *stats);/** * @brief Gera um relatório de estatísticas * * @param stats Estatísticas a serem incluídas no relatório * @param output_file Caminho para o arquivo de saída */void event_stats_generate_report(const EventStats *stats, const char *output_file);#endif // EMU_EVENT_STATS_H