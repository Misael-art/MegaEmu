/** * @file event_filter.h * @brief Filtro para eventos do sistema */#ifndef EMU_EVENT_FILTER_H#define EMU_EVENT_FILTER_H#include <stdint.h>#include <stdbool.h>#include "event_types.h"/** * @brief Estrutura para filtrar eventos */typedef struct{    uint32_t type_mask;                          // Máscara para filtrar por tipo    uint64_t time_start;                         // Timestamp inicial    uint64_t time_end;                           // Timestamp final    uint32_t source_id;                          // ID da fonte do evento    const char *pattern;                         // Padrão para filtrar mensagens (agora const)    bool (*custom_filter)(const EmuNodeEvent *); // Função de filtro personalizada} EventFilter;/** * @brief Inicializa um filtro com valores padrão * * @param filter Ponteiro para o filtro a ser inicializado */void event_filter_init(EventFilter *filter);/** * @brief Verifica se um evento corresponde aos critérios do filtro * * @param filter Filtro a ser aplicado * @param event Evento a ser verificado * @return true se o evento corresponde ao filtro, false caso contrário */bool event_filter_match(const EventFilter *filter, const EmuNodeEvent *event);/** * @brief Limpa recursos alocados pelo filtro * * @param filter Filtro a ser limpo */void event_filter_cleanup(EventFilter *filter);#endif // EMU_EVENT_FILTER_H