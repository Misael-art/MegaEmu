/** * @file nes_types.h * @brief Definições de tipos para o emulador NES */#ifndef NES_TYPES_H#define NES_TYPES_H#include <stdint.h>#include <stdbool.h>// Tipos de regiãotypedef enum{    NES_REGION_NTSC = 0,    NES_REGION_PAL,    NES_REGION_DENDY} nes_region_t;// Estrutura para o estado do NEStypedef struct{    // Componentes principais    void *cpu;       // Ponteiro para a CPU    void *ppu;       // Ponteiro para a PPU    void *apu;       // Ponteiro para a APU    void *cartridge; // Ponteiro para o cartucho    void *memory;    // Ponteiro para o subsistema de memória    void *input;     // Ponteiro para o subsistema de entrada    // Estado do emulador    bool running;    bool paused;    nes_region_t region;    uint64_t frame_count;    uint64_t cycle_count;    // Configurações    bool audio_enabled;    bool vsync_enabled;    bool fullscreen;    int32_t scale;} nes_t;// Estrutura para o frame de vídeotypedef struct{    uint32_t *data;    int32_t width;    int32_t height;    int32_t pitch;} nes_frame_t;// Estrutura para o buffer de áudiotypedef struct{    int16_t *data;    uint32_t size;    uint32_t sample_rate;    uint32_t channels;} nes_audio_buffer_t;// Flags da CPU#define NES_CPU_FLAG_CARRY (1 << 0)#define NES_CPU_FLAG_ZERO (1 << 1)#define NES_CPU_FLAG_IRQ_DISABLE (1 << 2)#define NES_CPU_FLAG_DECIMAL (1 << 3)#define NES_CPU_FLAG_BRK (1 << 4)#define NES_CPU_FLAG_UNUSED (1 << 5)#define NES_CPU_FLAG_OVERFLOW (1 << 6)#define NES_CPU_FLAG_NEGATIVE (1 << 7)// Registradores da CPUtypedef struct{    uint16_t pc; // Program Counter    uint8_t sp;  // Stack Pointer    uint8_t a;   // Accumulator    uint8_t x;   // X Index    uint8_t y;   // Y Index    uint8_t p;   // Processor Status} nes_cpu_registers_s;// Informações da CPU para debugtypedef struct{    nes_cpu_registers_s regs;    uint64_t cycles;    uint64_t instructions;} nes_cpu_info_s;// Registradores da PPUtypedef struct{    uint8_t ctrl;     // $2000    uint8_t mask;     // $2001    uint8_t status;   // $2002    uint8_t oam_addr; // $2003    uint8_t scroll;   // $2005    uint8_t addr;     // $2006    uint8_t data;     // $2007} nes_ppu_registers_s;// Informações da PPU para debugtypedef struct{    nes_ppu_registers_s regs;    int32_t scanline;    uint32_t frame;} nes_ppu_info_s;// Estado da CPUtypedef struct{    nes_cpu_registers_s regs;    uint8_t memory[0x800]; // 2KB RAM} nes_cpu_s;// Estado da PPUtypedef struct{    nes_ppu_registers_s regs;    uint8_t vram[0x4000]; // 16KB VRAM    uint8_t oam[256];     // Object Attribute Memory    uint8_t palette[32];  // Palette RAM} nes_ppu_s;#endif // NES_TYPES_H