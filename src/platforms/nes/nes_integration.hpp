#include <stdint.h>/** * @file nes_integration.hpp * @brief Declaração das funções de bridge entre C e C++ para o NES * @author Mega_Emu Team * @version 1.0.0 * @date 2024-03-13 */#pragma once#include <cstdint>#include <cstddef>#ifdef __cplusplusextern "C"{#endif    /**     * @brief Cria uma instância C++ do NES     * @return Ponteiro para a instância criada     */    void *nes_cpp_create();    /**     * @brief Destrói uma instância C++ do NES     * @param instance Ponteiro para a instância     */    void nes_cpp_destroy(void *instance);    /**     * @brief Inicializa uma instância C++ do NES     * @param instance Ponteiro para a instância     * @return 1 se sucesso, 0 se falha     */    int32_t nes_cpp_initialize(void *instance);    /**     * @brief Carrega uma ROM em uma instância C++ do NES     * @param instance Ponteiro para a instância     * @param data Dados da ROM     * @param size Tamanho dos dados     * @return 1 se sucesso, 0 se falha     */    int32_t nes_cpp_load_rom(void *instance, const uint8_t *data, size_t size);    /**     * @brief Executa um quadro em uma instância C++ do NES     * @param instance Ponteiro para a instância     * @return 1 se sucesso, 0 se falha     */    int32_t nes_cpp_run_frame(void *instance);    /**     * @brief Obtém o buffer de vídeo de uma instância C++ do NES     * @param instance Ponteiro para a instância     * @return Ponteiro para o buffer de vídeo     */    const uint32_t *nes_cpp_get_video_buffer(void *instance);    /**     * @brief Atualiza o estado do controle em uma instância C++ do NES     * @param instance Ponteiro para a instância     * @param controller_state Estado do controle     * @param controller_index Índice do controle (0 ou 1)     */    void nes_cpp_update_controller(void *instance, const void *controller_state, int32_t controller_index);    /**     * @brief Salva o estado de uma instância C++ do NES     * @param instance Ponteiro para a instância     * @param filename Nome do arquivo para salvar     * @return 1 se sucesso, 0 se falha     */    int32_t nes_cpp_save_state(void *instance, const char *filename);    /**     * @brief Carrega o estado de uma instância C++ do NES     * @param instance Ponteiro para a instância     * @param filename Nome do arquivo para carregar     * @return 1 se sucesso, 0 se falha     */    int32_t nes_cpp_load_state(void *instance, const char *filename);#ifdef __cplusplus}#endif