# CMakeLists.txt para a plataforma Master System# Criar os diretórios para organização do códigoset(MS_DIRS    cpu    video    audio    memory    io)# Criar diretórios se não existiremforeach(DIR ${MS_DIRS})    if(NOT EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${DIR}")        file(MAKE_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/${DIR}")    endif()endforeach()# Coletar arquivos fontefile(GLOB_RECURSE MS_SOURCES "*.c")file(GLOB_RECURSE MS_HEADERS "*.h")# Definir a biblioteca da plataforma Master Systemadd_library(emu_platform_mastersystem STATIC    ${MS_SOURCES}    ${MS_HEADERS})# Dependênciastarget_link_libraries(emu_platform_mastersystem    emu_core)# Exportar headers para outros componentestarget_include_directories(emu_platform_mastersystem PUBLIC    ${CMAKE_CURRENT_SOURCE_DIR})# Adicionar flags de compilação específicas para a plataformatarget_compile_definitions(emu_platform_mastersystem PRIVATE    EMU_PLATFORM_MASTERSYSTEM)# Instalar biblioteca e headersinstall(TARGETS emu_platform_mastersystem DESTINATION lib)install(FILES ${MS_HEADERS} DESTINATION include/platforms/mastersystem) 