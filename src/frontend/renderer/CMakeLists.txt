# Configuração da biblioteca de renderização do Mega_Emucmake_minimum_required(VERSION 3.10)# Encontrar dependênciasfind_package(SDL2 REQUIRED)# Tentar encontrar SDL2_image, mas torná-lo opcionalfind_package(SDL2_image CONFIG QUIET)if(NOT SDL2_image_FOUND)    find_package(SDL2_image QUIET)endif()if(SDL2_image_FOUND)    message(STATUS "SDL2_image encontrado, habilitando recursos de imagem avançados para o renderer")    add_definitions(-DUSE_SDL2_IMAGE)else()    message(STATUS "SDL2_image não encontrado, recursos de imagem avançados serão desabilitados no renderer")endif()# Verificar disponibilidade do SDL2_ttf para recursos de texto avançadosfind_package(SDL2_ttf CONFIG QUIET)if(NOT SDL2_ttf_FOUND)    find_package(SDL2_ttf QUIET)endif()if(SDL2_ttf_FOUND)    add_definitions(-DUSE_SDL2_TTF)    message(STATUS "SDL2_ttf encontrado - recursos de texto avançados habilitados")else()    message(STATUS "SDL2_ttf não encontrado - recursos de texto básicos serão utilizados")endif()# Listar os diretórios de inclusãoinclude_directories(    ${CMAKE_CURRENT_SOURCE_DIR}    ${CMAKE_CURRENT_SOURCE_DIR}/..    ${CMAKE_CURRENT_SOURCE_DIR}/../gui    ${CMAKE_CURRENT_SOURCE_DIR}/../../core    ${SDL2_INCLUDE_DIRS})# Adicionar o diretório de inclusão do SDL2_image se disponívelif(TARGET SDL2_image::SDL2_image)    # Nada a fazer - será usado via targetelseif(SDL2_IMAGE_INCLUDE_DIRS)    include_directories(${SDL2_IMAGE_INCLUDE_DIRS})endif()# Adicionar o diretório de inclusão do SDL2_ttf se disponívelif(TARGET SDL2_ttf::SDL2_ttf)    # Nada a fazer - será usado via targetelseif(SDL2_TTF_INCLUDE_DIRS)    include_directories(${SDL2_TTF_INCLUDE_DIRS})endif()# Arquivo fonte do rendererset(RENDERER_SOURCES    text_renderer.c    texture_cache.c    nes_renderer.c)# Criar a biblioteca estáticaadd_library(renderer STATIC ${RENDERER_SOURCES})# Vincular bibliotecastarget_link_libraries(renderer    ${SDL2_LIBRARIES})# Adicionar SDL2_image se disponívelif(SDL2_image_FOUND)    if(TARGET SDL2_image::SDL2_image)        target_link_libraries(renderer SDL2_image::SDL2_image)    elseif(SDL2_IMAGE_LIBRARIES)        target_link_libraries(renderer ${SDL2_IMAGE_LIBRARIES})    endif()endif()# Adicionar SDL2_ttf se disponívelif(SDL2_ttf_FOUND)    if(TARGET SDL2_ttf::SDL2_ttf)        target_link_libraries(renderer SDL2_ttf::SDL2_ttf)    elseif(SDL2_TTF_LIBRARIES)        target_link_libraries(renderer ${SDL2_TTF_LIBRARIES})    endif()endif()# Configurações específicas para cada plataformaif(WIN32)    target_compile_definitions(renderer PRIVATE -D_CRT_SECURE_NO_WARNINGS)endif()if(RENDERER_SOURCES)    add_library(renderer STATIC ${RENDERER_SOURCES})    target_include_directories(renderer PUBLIC        ${CMAKE_CURRENT_SOURCE_DIR}        ${CMAKE_SOURCE_DIR}/deps/sdl2/include    )    target_link_libraries(renderer PRIVATE        SDL2::SDL2    )endif()