/** * @file gui_save_state.h * @brief Interface gráfica para gerenciamento de save states */#ifndef GUI_SAVE_STATE_H#define GUI_SAVE_STATE_H#include <stdbool.h>#include <stdint.h>#include <time.h>#include "gui/gui_types.h"#include "gui_manager.h"// Número máximo de slots de save#define MAX_SAVE_SLOTS 10// Estrutura para um slot de savetypedef struct save_slot_s{    bool in_use;    char description[256];    char filename[128];    time_t timestamp;    size_t size;    bool has_screenshot;} save_slot_t;// Callback para operações de save statetypedef void (*save_state_callback_t)(int slot_index, void *user_data);// Estrutura completa do gerenciador de save statestypedef struct gui_save_state_s{    // Elemento base da GUI    gui_element_t base;    // Slots de save    save_slot_t slots[MAX_SAVE_SLOTS];    // Estado atual    int selected_slot;    bool visible;    bool enabled;    // Callbacks    save_state_callback_t on_save;    save_state_callback_t on_load;    save_state_callback_t on_delete;    // Dados do usuário para callbacks    void *user_data;} gui_save_state_t;// Funções de inicialização e finalizaçãogui_error_t gui_save_state_init(gui_manager_t *manager, const char *platform_name);void gui_save_state_shutdown(void);// Funções de operaçãogui_error_t gui_save_state_save(int slot_index);gui_error_t gui_save_state_load(int slot_index);gui_error_t gui_save_state_delete(int slot_index);// Funções de controle de visibilidadevoid gui_save_state_show(bool for_loading,                        void (*callback)(bool success, bool is_load, int slot_index, void *user_data),                        void *user_data);void gui_save_state_hide(void);bool gui_save_state_is_visible(void);// Funções de manipulação de slotsvoid gui_save_state_clear_slot(gui_save_state_t *state, int32_t slot);void gui_save_state_clear_all(gui_save_state_t *state);// Funções de configuraçãovoid gui_save_state_set_position(gui_save_state_t *state, int32_t x, int32_t y);void gui_save_state_set_size(gui_save_state_t *state, int32_t width, int32_t height);void gui_save_state_set_save_dir(gui_save_state_t *state, const char *dir);void gui_save_state_set_platform(gui_save_state_t *state, uint32_t platform_id, const char *game_title);void gui_save_state_set_callbacks(gui_save_state_t *state,                                save_state_callback_t on_save,                                save_state_callback_t on_load);// Funções de evento e renderizaçãobool gui_save_state_handle_event(gui_save_state_t *state, const gui_event_t *event);void gui_save_state_render(gui_save_state_t *state);#endif /* GUI_SAVE_STATE_H */