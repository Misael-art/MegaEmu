/** * @file frontend_config.h * @brief Configuração comum para o frontend do emulador */#ifndef EMU_FRONTEND_CONFIG_H#define EMU_FRONTEND_CONFIG_H#include <stdbool.h>#include <stdint.h>#ifdef __cplusplusextern "C"{#endif    /**     * @brief Estrutura de configuração do frontend     */    typedef struct    {        // Vídeo        int32_t window_width;        int32_t window_height;        int32_t game_width;        int32_t game_height;        float scale_factor;        bool vsync_enabled;        bool fullscreen;        bool smooth_scaling;        bool integer_scaling;        // Áudio        int32_t audio_sample_rate;        int32_t audio_buffer_size;        bool audio_enabled;        // Entrada        bool keyboard_enabled;        bool gamepad_enabled;        // Interface        bool show_fps;        bool debug_overlay;    } emu_frontend_config_t;    /**     * @brief Configuração padrão do frontend     */    extern const emu_frontend_config_t EMU_DEFAULT_FRONTEND_CONFIG;    /**     * @brief Inicializa a configuração do frontend     */    void emu_frontend_config_init(void);    /**     * @brief Carrega a configuração do frontend de um arquivo     *     * @param config_file Caminho para o arquivo de configuração     */    void emu_frontend_config_load(const char *config_file);    /**     * @brief Salva a configuração do frontend em um arquivo     *     * @param config_file Caminho para o arquivo de configuração     */    void emu_frontend_config_save(const char *config_file);    /**     * @brief Define os valores padrão para a configuração do frontend     *     * @param config Ponteiro para a estrutura de configuração     */    void emu_frontend_config_set_defaults(emu_frontend_config_t *config);#ifdef __cplusplus}#endif#endif /* EMU_FRONTEND_CONFIG_H */