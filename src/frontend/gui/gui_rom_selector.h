#ifndef MEGA_EMU_GUI_ROM_SELECTOR_H
#define MEGA_EMU_GUI_ROM_SELECTOR_H #include "gui_types.h" #include "gui_manager.h" #define GUI_MAX_ROMS 100 // Estrutura de informação da ROMtypedef struct{    char filename[GUI_MAX_TEXT];    bool valid;} rom_info_s;// Estrutura do seletor de ROMstypedef struct{    gui_manager_t *manager;    gui_element_id_t container_id;    gui_element_id_t rom_elements[GUI_MAX_ROMS];    rom_info_s roms[GUI_MAX_ROMS];    uint32_t rom_count;    void (*on_select)(const char *filename, void *user_data);    void *user_data;    int selected_index;    int consoles[4]; // Assuming a maximum of 4 consoles for now} gui_rom_selector_s;typedef gui_rom_selector_s *gui_rom_selector_t;// Funções de inicialização e desinicializaçãovoid gui_rom_selector_init(gui_rom_selector_t *selector, gui_manager_t *manager,                           void (*on_select)(const char *filename, void *user_data),                           void *user_data);void gui_rom_selector_deinit(gui_rom_selector_t *selector);// Funções de operaçãovoid gui_rom_selector_scan_roms(gui_rom_selector_t *selector);void gui_rom_selector_add_rom(gui_rom_selector_t *selector, const char *filename);void gui_rom_selector_remove_rom(gui_rom_selector_t *selector, const char *filename);void gui_rom_selector_select_rom(gui_rom_selector_t *selector, const char *filename);// Funções de visibilidadevoid gui_rom_selector_show(gui_rom_selector_t *selector);void gui_rom_selector_hide(gui_rom_selector_t *selector);// Funções de eventosvoid gui_rom_selector_process_event(gui_rom_selector_t *selector, const gui_event_s *event);void gui_rom_selector_update(gui_rom_selector_t *selector);void gui_rom_selector_render(gui_rom_selector_t *selector, SDL_Renderer *renderer);#endif /* MEGA_EMU_GUI_ROM_SELECTOR_H */
