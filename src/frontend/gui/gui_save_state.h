#ifndef MEGA_EMU_GUI_SAVE_STATE_H
#define MEGA_EMU_GUI_SAVE_STATE_H #include "gui_types.h" #include "gui_manager.h" // Constantes#define GUI_MAX_SAVE_SLOTS 10#define GUI_MAX_FILENAME 256// Estrutura do slot de savetypedef struct {    char filename[GUI_MAX_FILENAME];    uint32_t timestamp;    bool valid;} save_slot_s;// Estrutura do gerenciador de save statestypedef struct {    gui_manager_t manager;    gui_element_id_t container_id;    gui_element_id_t slot_elements[GUI_MAX_SAVE_SLOTS];    save_slot_s slots[GUI_MAX_SAVE_SLOTS];    void (*on_save)(const char* filename, void* user_data);    void (*on_load)(const char* filename, void* user_data);    void* user_data;} gui_save_state_s;typedef gui_save_state_s* gui_save_state_t;// Funções de inicializaçãogui_save_state_t gui_save_state_init(gui_manager_t manager,                                   void (*on_save)(const char* filename, void* user_data),                                   void (*on_load)(const char* filename, void* user_data),                                   void* user_data);void gui_save_state_deinit(gui_save_state_t state);// Funções de operaçãovoid gui_save_state_save(gui_save_state_t state, uint32_t slot);void gui_save_state_load(gui_save_state_t state, uint32_t slot);void gui_save_state_scan_slots(gui_save_state_t state);// Funções de visibilidadevoid gui_save_state_show(gui_save_state_t state);void gui_save_state_hide(gui_save_state_t state);// Funções de eventosvoid gui_save_state_process_event(gui_save_state_t state, const gui_event_s* event);void gui_save_state_update(gui_save_state_t state);void gui_save_state_render(gui_save_state_t state, SDL_Renderer* renderer);#endif /* MEGA_EMU_GUI_SAVE_STATE_H */
