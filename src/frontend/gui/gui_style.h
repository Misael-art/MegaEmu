/** * @file gui_style.h * @brief Definições de estilo para a interface gráfica do Mega_Emu */#ifndef GUI_STYLE_H#define GUI_STYLE_H#include "gui_types.h"#include "../renderer/text_renderer.h"// Cores padrão#define GUI_COLOR_BLACK (gui_color_t){0, 0, 0, 255}#define GUI_COLOR_WHITE (gui_color_t){255, 255, 255, 255}#define GUI_COLOR_RED (gui_color_t){255, 0, 0, 255}#define GUI_COLOR_GREEN (gui_color_t){0, 255, 0, 255}#define GUI_COLOR_BLUE (gui_color_t){0, 0, 255, 255}#define GUI_COLOR_YELLOW (gui_color_t){255, 255, 0, 255}#define GUI_COLOR_CYAN (gui_color_t){0, 255, 255, 255}#define GUI_COLOR_MAGENTA (gui_color_t){255, 0, 255, 255}#define GUI_COLOR_TRANSPARENT (gui_color_t){0, 0, 0, 0}// Cores da interface#define GUI_COLOR_BACKGROUND (gui_color_t){16, 16, 32, 255}#define GUI_COLOR_PANEL (gui_color_t){32, 32, 64, 220}#define GUI_COLOR_BUTTON (gui_color_t){64, 64, 128, 255}#define GUI_COLOR_BUTTON_HOVER (gui_color_t){96, 96, 160, 255}#define GUI_COLOR_BUTTON_ACTIVE (gui_color_t){128, 128, 192, 255}#define GUI_COLOR_TEXT (gui_color_t){220, 220, 220, 255}#define GUI_COLOR_TEXT_HIGHLIGHT (gui_color_t){255, 255, 255, 255}#define GUI_COLOR_BORDER (gui_color_t){128, 128, 192, 255}#define GUI_COLOR_SELECTION (gui_color_t){64, 128, 255, 128}// Estilos de botãotypedef enum{    BUTTON_STYLE_NORMAL = 0,    BUTTON_STYLE_PRIMARY,    BUTTON_STYLE_SECONDARY,    BUTTON_STYLE_DANGER,    BUTTON_STYLE_SUCCESS,    BUTTON_STYLE_INFO,    BUTTON_STYLE_MAX} button_style_t;// Estrutura de estilo para botõestypedef struct{    gui_color_t normal;    gui_color_t hover;    gui_color_t active;    gui_color_t text;    gui_color_t border;    int border_width;    int corner_radius;} button_style_s;// Estrutura de estilo para painéistypedef struct{    gui_color_t background;    gui_color_t border;    int border_width;    int corner_radius;    int padding;} panel_style_s;// Estrutura de estilo para textotypedef struct{    gui_color_t color;    text_size_t size;    bool bold;    bool italic;    bool underline;} text_style_s;// Funções para obter estilos padrãobutton_style_s gui_get_button_style(button_style_t style);panel_style_s gui_get_panel_style(void);text_style_s gui_get_text_style(text_size_t size);#endif // GUI_STYLE_H