#include <stdint.h>#ifndef GUI_THEME_H#define GUI_THEME_H#ifdef __cplusplusextern "C" {#endif#include "gui_types.h"// Estrutura de cores do tematypedef struct{    gui_color_t primary;    gui_color_t secondary;    gui_color_t accent;    gui_color_t background;    gui_color_t text;    gui_color_t text_secondary;    gui_color_t border;    gui_color_t disabled;    gui_color_t error;    gui_color_t success;} gui_theme_colors_t;// Estrutura de métricas do tematypedef struct{    float border_radius;    float border_width;    float padding;    float margin;    float button_height;    float input_height;    float font_size_small;    float font_size_normal;    float font_size_large;    float icon_size;} gui_theme_metrics_t;// Estrutura de fontes do tematypedef struct{    const char *regular;    const char *bold;    const char *italic;    const char *light;    void *regular_handle;    void *bold_handle;    void *italic_handle;    void *light_handle;} gui_theme_fonts_t;// Estrutura principal do tematypedef struct{    const char *name;    gui_theme_colors_t colors;    gui_theme_metrics_t metrics;    gui_theme_fonts_t fonts;} gui_theme_t;// Funções de gerenciamento de temasgui_result_t gui_theme_init(void);void gui_theme_shutdown(void);gui_result_t gui_theme_load(const char *theme_file);gui_result_t gui_theme_save(const char *theme_file);gui_result_t gui_theme_set_current(const gui_theme_t *theme);const gui_theme_t *gui_theme_get_current(void);// Funções de criação e manipulação de temasgui_theme_t *gui_theme_create(const char *name);void gui_theme_destroy(gui_theme_t *theme);gui_result_t gui_theme_set_colors(gui_theme_t *theme, const gui_theme_colors_t *colors);gui_result_t gui_theme_set_metrics(gui_theme_t *theme, const gui_theme_metrics_t *metrics);gui_result_t gui_theme_set_fonts(gui_theme_t *theme, const gui_theme_fonts_t *fonts);// Temas predefinidosextern const gui_theme_t *GUI_THEME_LIGHT;extern const gui_theme_t *GUI_THEME_DARK;extern const gui_theme_t *GUI_THEME_CLASSIC;#endif // GUI_THEME_H