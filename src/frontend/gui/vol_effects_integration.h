#include <stdint.h>#ifndef GUI_VOL_EFFECTS_INTEGRATION_H#define GUI_VOL_EFFECTS_INTEGRATION_H#ifdef __cplusplusextern "C" {#endif#include "volumetric_effects.h"#include "sdl2_backend.h"// Funções para integração com o sistema principal do emulador// Inicializa o sistema de efeitos volumétricos e integra com SDL2bool vol_effects_init_with_sdl2(vol_effects_state_t *state, gui_sdl2_backend_t *sdl2_backend,                                const char *shader_path, int32_t quality_level);// Aplica efeitos volumétricos ao frame atual da emulaçãobool vol_effects_apply_to_frame(vol_effects_state_t *state, gui_sdl2_backend_t *sdl2_backend,                                SDL_Texture *source_texture, SDL_Texture *target_texture);// Obtém textura da máscara de obstáculos de luz da cenaSDL_Texture *vol_effects_create_light_mask(vol_effects_state_t *state, gui_sdl2_backend_t *sdl2_backend,                                           int32_t width, int32_t height);// Adiciona os elementos de UI para controle dos efeitos no sistema do emuladorbool vol_effects_add_ui_controls(vol_effects_state_t *state);// Define preset com base no jogo que está sendo executadobool vol_effects_select_preset_for_game(vol_effects_state_t *state, const char *rom_path,                                        const char *platform_name);// Salva configurações personalizadas do usuáriobool vol_effects_save_user_settings(vol_effects_state_t *state, const char *config_path);// Carrega configurações personalizadas do usuáriobool vol_effects_load_user_settings(vol_effects_state_t *state, const char *config_path);// Identifica elementos na cena que podem servir de fonte de luz (sprites brilhantes, etc)bool vol_effects_detect_light_sources(vol_effects_state_t *state, SDL_Texture *game_frame,                                      vol_vector2_t *out_positions, int32_t *out_count, int32_t max_count);// Gera eventos de partículas baseados na gameplay (explosões, saltos, etc)bool vol_effects_trigger_gameplay_particles(vol_effects_state_t *state,                                            vol_vector2_t position,                                            int32_t effect_type);// Atualiza os efeitos com base em alterações de configuração em tempo realvoid vol_effects_update_config(vol_effects_state_t *state);// Implementa detector de melhor qualidade com base no hardwareint32_t vol_effects_detect_optimal_quality(void);#endif // GUI_VOL_EFFECTS_INTEGRATION_H