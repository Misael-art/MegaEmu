#include <stdint.h>#ifndef GUI_EMU_EFFECTS_H#define GUI_EMU_EFFECTS_H#ifdef __cplusplusextern "C" {#endif#include "gui_types.h"#include "shaders.h"// Tipos de efeitos específicos para emuladorestypedef enum{    EMU_EFFECT_NONE = 0,    EMU_EFFECT_PHOSPHOR,  // Rastro de fósforo (monitores CRT)    EMU_EFFECT_TV_NOISE,  // Ruído e interferência de TV    EMU_EFFECT_LCD,       // Efeito de tela LCD (pixels visíveis, ghosting)    EMU_EFFECT_GAMEBOY,   // Filtro de Game Boy (4 tons de verde)    EMU_EFFECT_GBC,       // Filtro de Game Boy Color    EMU_EFFECT_NES,       // Paleta de cores NES    EMU_EFFECT_VHS,       // Efeito de fita VHS    EMU_EFFECT_NTSC_BLEED // Sangramento de cores NTSC} emu_effect_type_t;// Configurações de consoletypedef enum{    EMU_CONSOLE_NONE = 0,    EMU_CONSOLE_NES,    EMU_CONSOLE_SNES,    EMU_CONSOLE_GAMEBOY,    EMU_CONSOLE_GBC,    EMU_CONSOLE_GBA,    EMU_CONSOLE_MEGADRIVE,    EMU_CONSOLE_MASTERSYSTEM,    EMU_CONSOLE_ARCADE_CRT} emu_console_type_t;// Parâmetros para efeitos de emuladortypedef struct{    float phosphor_persistence; // Persistência do rastro de fósforo (0.0 - 1.0)    float noise_intensity;      // Intensidade do ruído (0.0 - 1.0)    float scanline_intensity;   // Intensidade das scanlines (0.0 - 1.0)    float curvature;            // Curvatura CRT (0.0 - 1.0)    float color_bleed;          // Sangramento de cores (0.0 - 1.0)    float ghosting;             // Efeito de ghosting LCD (0.0 - 1.0)    float pixel_grid;           // Intensidade da grade de pixels (0.0 - 1.0)    float color_shift;          // Alteração de cores (0.0 - 1.0)    gui_color_t tint;           // Cor de tingimento (para filtros GB/GBC)    gui_bool_t pixel_perfect;   // Manter pixels perfeitos (sem filtros)} emu_effect_params_t;// Estrutura de preset para consoletypedef struct{    const char *name;             // Nome do preset    emu_console_type_t console;   // Tipo de console    emu_effect_params_t params;   // Parâmetros do efeito    gui_shader_type_t shaders[8]; // Shaders a serem aplicados (em ordem)    size_t shader_count;          // Número de shaders} emu_preset_t;// Sistema de efeitos de emuladortypedef struct{    emu_preset_t *presets;              // Lista de presets    size_t preset_count;                // Número de presets    emu_preset_t current_preset;        // Preset ativo    SDL_Texture *previous_frame;        // Frame anterior (para efeitos de persistence)    gui_shader_system_t *shader_system; // Sistema de shaders    gui_bool_t initialized;             // Flag de inicialização} emu_effect_system_t;// Funções de inicializaçãogui_result_t emu_effects_init(emu_effect_system_t *system, gui_shader_system_t *shaders);void emu_effects_shutdown(emu_effect_system_t *system);// Funções de gerenciamento de presetsgui_result_t emu_effects_add_preset(emu_effect_system_t *system, const emu_preset_t *preset);gui_result_t emu_effects_load_preset(emu_effect_system_t *system, const char *name);gui_result_t emu_effects_set_console(emu_effect_system_t *system, emu_console_type_t console);gui_result_t emu_effects_customize(emu_effect_system_t *system, emu_effect_params_t params);// Presets padrãoemu_preset_t emu_preset_default(void);emu_preset_t emu_preset_nes(void);emu_preset_t emu_preset_snes(void);emu_preset_t emu_preset_gameboy(void);emu_preset_t emu_preset_gbc(void);emu_preset_t emu_preset_gba(void);emu_preset_t emu_preset_megadrive(void);emu_preset_t emu_preset_mastersystem(void);emu_preset_t emu_preset_arcade(void);// Funções de aplicação de efeitogui_result_t emu_effects_begin_frame(emu_effect_system_t *system, SDL_Texture *target);gui_result_t emu_effects_apply(emu_effect_system_t *system,                               SDL_Texture *source,                               SDL_Texture *target);gui_result_t emu_effects_end_frame(emu_effect_system_t *system);// Efeitos específicosgui_result_t emu_effect_apply_phosphor(emu_effect_system_t *system,                                       SDL_Texture *source,                                       SDL_Texture *target,                                       float persistence);gui_result_t emu_effect_apply_tv_noise(emu_effect_system_t *system,                                       SDL_Texture *source,                                       SDL_Texture *target,                                       float intensity);gui_result_t emu_effect_apply_lcd(emu_effect_system_t *system,                                  SDL_Texture *source,                                  SDL_Texture *target,                                  float grid_intensity,                                  float ghosting);gui_result_t emu_effect_apply_gameboy(emu_effect_system_t *system,                                      SDL_Texture *source,                                      SDL_Texture *target);gui_result_t emu_effect_apply_color_shift(emu_effect_system_t *system,                                          SDL_Texture *source,                                          SDL_Texture *target,                                          gui_color_t tint,                                          float intensity);gui_result_t emu_effect_apply_ntsc_bleed(emu_effect_system_t *system,                                         SDL_Texture *source,                                         SDL_Texture *target,                                         float intensity);// Gerenciamento de presets para jogos específicosgui_result_t emu_effects_save_game_preset(const char *rom_path, const emu_preset_t *preset);gui_result_t emu_effects_load_game_preset(emu_effect_system_t *system, const char *rom_path);#endif // GUI_EMU_EFFECTS_H