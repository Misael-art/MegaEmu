#ifndef MEGA_EMU_GUI_MANAGER_H
#define MEGA_EMU_GUI_MANAGER_H #include "gui_types.h" #include<SDL2 / SDL.h> #include<stdbool.h> // Constantes#define GUI_MAX_ELEMENTS 256#define GUI_MAX_CALLBACKS 16// Estrutura de callback de eventotypedef struct{    gui_element_id_t element_id;    gui_event_type_t type;    void (*callback)(gui_event_s *event, void *user_data);    void *user_data;} gui_event_callback_s;// Estrutura do gerenciador de GUItypedef struct gui_manager_s {    gui_element_s elements[GUI_MAX_ELEMENTS];    uint32_t element_count;} gui_manager_s;typedef gui_manager_s* gui_manager_t;// Funções de inicializaçãogui_manager_t gui_manager_init(void);void gui_manager_deinit(gui_manager_t manager);// Funções de eventosvoid gui_manager_process_event(gui_manager_t manager, const gui_event_s* event);void gui_manager_update(gui_manager_t manager);void gui_manager_render(gui_manager_t manager, SDL_Renderer* renderer);// Funções de gerenciamento de elementosgui_element_id_t gui_manager_add_element(gui_manager_t manager, gui_element_type_t type, const gui_rect_t* rect, const char* text);void gui_manager_remove_element(gui_manager_t manager, gui_element_id_t element_id);gui_element_s* gui_manager_get_element(gui_manager_t manager, gui_element_id_t element_id);// Funções de propriedadesvoid gui_manager_set_element_text(gui_manager_t manager, gui_element_id_t element_id, const char* text);void gui_manager_set_element_color(gui_manager_t manager, gui_element_id_t element_id, const SDL_Color* color);void gui_manager_set_element_bg_color(gui_manager_t manager, gui_element_id_t element_id, const SDL_Color* color);void gui_manager_set_element_texture(gui_manager_t manager, gui_element_id_t element_id, SDL_Texture* texture);// Funções de hierarquiavoid gui_manager_add_child(gui_manager_t manager, gui_element_id_t parent_id, gui_element_id_t child_id);void gui_manager_remove_child(gui_manager_t manager, gui_element_id_t parent_id, gui_element_id_t child_id);// Funções de visibilidadevoid gui_manager_show_element(gui_manager_t manager, gui_element_id_t element_id);void gui_manager_hide_element(gui_manager_t manager, gui_element_id_t element_id);// Funções de registro de callbacksvoid gui_manager_register_callback(gui_manager_t *manager, gui_element_id_t element_id, gui_event_type_t type, void (*callback)(gui_event_s *event, void *user_data), void *user_data);void gui_manager_unregister_callback(gui_manager_t *manager, gui_element_id_t element_id, gui_event_type_t type);#endif /* MEGA_EMU_GUI_MANAGER_H */
