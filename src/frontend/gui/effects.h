#include <stdint.h>#ifndef GUI_EFFECTS_H#define GUI_EFFECTS_H#include "gui_types.h"#include "sdl2_backend.h"#include "shaders.h"#ifdef __cplusplusextern "C" {#endif/* Tipos de efeitos */typedef enum gui_effect_type_e{    GUI_EFFECT_NONE = 0,    GUI_EFFECT_FADE,    GUI_EFFECT_BLUR,    GUI_EFFECT_SCANLINES,    GUI_EFFECT_CRT,    GUI_EFFECT_PIXELATE,    GUI_EFFECT_WAVE,    GUI_EFFECT_COLOR_CORRECTION,    GUI_EFFECT_MAX} gui_effect_type_t;/* Parâmetros de efeitos */typedef struct gui_effect_params_s{    float intensity;   /* Intensidade geral do efeito (0.0 - 1.0) */    float time;        /* Tempo para efeitos animados */    float params[4];   /* Parâmetros específicos do efeito */    gui_color_t color; /* Cor para efeitos que usam cor */} gui_effect_params_t;/* Estrutura de efeito */typedef struct gui_effect_s{    gui_effect_type_t type;    gui_effect_params_t params;    SDL_Texture *buffer; /* Buffer de renderização */    SDL_Texture *temp;   /* Buffer temporário para efeitos complexos */    gui_bool_t enabled;    gui_bool_t needs_update;} gui_effect_t;/* Sistema de efeitos */typedef struct gui_effect_system_s{    gui_effect_t *effects;    size_t effect_count;    SDL_Texture *main_buffer;    SDL_Texture *output_buffer;    float global_intensity;    gui_shader_system_t *shader_system;} gui_effect_system_t;/* Funções de inicialização */gui_result_t gui_effects_init(gui_effect_system_t *system,                            gui_sdl2_backend_t *backend);void gui_effects_shutdown(gui_effect_system_t *system);/* Gerenciamento de efeitos */gui_result_t gui_effects_add(gui_effect_system_t *system,                           gui_effect_type_t type,                           gui_effect_params_t params);void gui_effects_remove(gui_effect_system_t *system,                      gui_effect_type_t type);void gui_effects_enable(gui_effect_system_t *system,                      gui_effect_type_t type,                      gui_bool_t enable);void gui_effects_set_params(gui_effect_system_t *system,                          gui_effect_type_t type,                          gui_effect_params_t params);/* Aplicação de efeitos */gui_result_t gui_effects_begin_frame(gui_effect_system_t *system);gui_result_t gui_effects_end_frame(gui_effect_system_t *system);gui_result_t gui_effects_apply(gui_effect_system_t *system,                             gui_sdl2_backend_t *backend);/* Efeitos específicos */gui_result_t gui_effect_fade(SDL_Texture *target,                           float intensity,                           gui_color_t color);gui_result_t gui_effect_blur(SDL_Texture *target,                           float radius);gui_result_t gui_effect_scanlines(SDL_Texture *target,                                float intensity,                                float spacing);gui_result_t gui_effect_crt(SDL_Texture *target,                          float curvature,                          float vignette,                          float scanline_intensity);gui_result_t gui_effect_pixelate(SDL_Texture *target,                               float pixel_size);gui_result_t gui_effect_wave(SDL_Texture *target,                           float amplitude,                           float frequency,                           float time);gui_result_t gui_effect_color_correction(SDL_Texture *target,                                       float brightness,                                       float contrast,                                       float saturation,                                       float gamma);#ifdef __cplusplus}#endif#endif /* GUI_EFFECTS_H */