#include <stdint.h>#ifndef GUI_WIDGETS_H#define GUI_WIDGETS_H#ifdef __cplusplusextern "C" {#endif#include "gui_types.h"#include "sdl2_backend.h"// Tipos de widgetstypedef enum{    GUI_WIDGET_BUTTON,    GUI_WIDGET_TEXTBOX,    GUI_WIDGET_SLIDER,    GUI_WIDGET_DROPDOWN,    GUI_WIDGET_CHECKBOX,    GUI_WIDGET_PROGRESS,    GUI_WIDGET_LIST} gui_widget_type_t;// Estrutura base para widgetstypedef struct gui_widget{    gui_widget_type_t type;    gui_rect_t bounds;    gui_bool_t enabled;    gui_bool_t visible;    gui_bool_t focused;    void (*on_click)(struct gui_widget *widget);    void (*on_hover)(struct gui_widget *widget);    void (*on_focus)(struct gui_widget *widget);    void (*render)(struct gui_widget *widget, gui_sdl2_backend_t *backend);} gui_widget_t;// Botãotypedef struct{    gui_widget_t base;    const char *text;    gui_color_t text_color;    gui_color_t background_color;    gui_color_t hover_color;    gui_bool_t pressed;} gui_button_t;// Caixa de textotypedef struct{    gui_widget_t base;    char *text;    size_t text_capacity;    size_t cursor_pos;    gui_color_t text_color;    gui_color_t background_color;    gui_bool_t password_mode;} gui_textbox_t;// Slidertypedef struct{    gui_widget_t base;    float value;    float min_value;    float max_value;    gui_color_t bar_color;    gui_color_t handle_color;    void (*on_value_changed)(struct gui_widget *widget, float value);} gui_slider_t;// Listatypedef struct{    gui_widget_t base;    char **items;    size_t item_count;    size_t selected_index;    gui_color_t item_color;    gui_color_t selected_color;    void (*on_selection_changed)(struct gui_widget *widget, size_t index);} gui_list_t;// Funções de criação de widgetsgui_button_t *gui_button_create(const char *text, gui_rect_t bounds);gui_textbox_t *gui_textbox_create(gui_rect_t bounds, size_t capacity);gui_slider_t *gui_slider_create(gui_rect_t bounds, float min, float max);gui_list_t *gui_list_create(gui_rect_t bounds);// Funções de destruição de widgetsvoid gui_widget_destroy(gui_widget_t *widget);// Funções de manipulação de widgetsvoid gui_widget_set_enabled(gui_widget_t *widget, gui_bool_t enabled);void gui_widget_set_visible(gui_widget_t *widget, gui_bool_t visible);void gui_widget_set_bounds(gui_widget_t *widget, gui_rect_t bounds);#endif // GUI_WIDGETS_H