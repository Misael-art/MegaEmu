# CMakeLists.txt para o frontend SDL# Encontrar SDL2find_package(SDL2 REQUIRED)# Verificar versão do SDL2if(SDL2_VERSION_STRING VERSION_LESS "2.0.0")    message(FATAL_ERROR "SDL2 versão 2.0.0 ou superior é necessária")endif()# Coletar arquivos fonteset(SDL_FRONTEND_SOURCES    sdl_frontend.c    sdl_game_renderer.c)set(SDL_FRONTEND_HEADERS    sdl_frontend.h    sdl_game_renderer.h    frontend_config.h)# Criar biblioteca do frontend SDLadd_library(sdl_frontend STATIC    ${SDL_FRONTEND_SOURCES}    ${SDL_FRONTEND_HEADERS})# Incluir diretóriostarget_include_directories(sdl_frontend    PUBLIC        ${CMAKE_CURRENT_SOURCE_DIR}        ${SDL2_INCLUDE_DIRS}        ${CMAKE_SOURCE_DIR}/src        ${CMAKE_SOURCE_DIR}/src/utils)# Adiciona ao path de buscainclude_directories(    ${CMAKE_SOURCE_DIR}/src    ${CMAKE_SOURCE_DIR}/deps/include    ${SDL2_INCLUDE_DIRS}    ${SDL2_TTF_INCLUDE_DIRS})# Vincular dependênciastarget_link_libraries(sdl_frontend    PUBLIC        SDL2::SDL2        SDL2::SDL2main        utils        core        ${SDL2_LIBRARIES}        ${SDL2_TTF_LIBRARIES}        emu_core        emu_utils        emu_nes)# Definir flags de compilaçãotarget_compile_definitions(sdl_frontend    PRIVATE        SDL_MAIN_HANDLED        SDL2_VERSION="${SDL2_VERSION_STRING}")# Configurar opções de compilaçãoif(MSVC)    target_compile_options(sdl_frontend PRIVATE /W4)else()    target_compile_options(sdl_frontend PRIVATE -Wall -Wextra)endif()# Criar programa de testeadd_executable(test_frontend    test_frontend.c)target_link_libraries(test_frontend    PRIVATE        sdl_frontend        SDL2::SDL2        SDL2::SDL2main        utils        core)# Copiar DLLs do SDL2 para o diretório do executávelif(WIN32)    add_custom_command(TARGET test_frontend POST_BUILD        COMMAND ${CMAKE_COMMAND} -E copy_if_different            $<TARGET_FILE:SDL2::SDL2>            $<TARGET_FILE_DIR:test_frontend>    )endif()# Instalar biblioteca e programa de testeinstall(TARGETS sdl_frontend test_frontend    RUNTIME DESTINATION bin    LIBRARY DESTINATION lib    ARCHIVE DESTINATION lib)install(FILES ${SDL_FRONTEND_HEADERS}    DESTINATION include/frontend/sdl)set(SDL_DEPENDENCIES    SDL2    SDL2_ttf)